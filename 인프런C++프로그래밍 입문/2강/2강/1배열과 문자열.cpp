#include <iostream>

using namespace std;

int main_1() {
	// 배열과 문자열
	/*
	C++는 복합데이터형을 제공한다.
	>> 사용자 정의대로 새로운 데이터형을 만들수 있다.
	복합데이터형 : 기본 정수형과 부동소수점형의 조합.
	*/

	/*
	배열(array) : 같은 데이터형의 집합
	typeName arrayName[arraySize];
	*/

	short month[12]; // short 데이터형을 가진 month라는 이름의 size가 12인 배열 선언
	
	// 배열의 초기화
	short month1[12] = { 1, 2 ,3 };

	cout << month1[4] << endl;

	/*
	배열 원소에 대입할 값들을 콤마로 구분하여 중괄호로 묶어 선언한다.
	초기화를 선언 이후 나중에 할 수는 없다.
	배열을 다른 배열에 동째로 대입할 수 없다.
	short month[5] = { ... }
	short year[12] = { ... }
	year = month; -> 안되는 방식
	초기화 값의 개수를 배열 원소의 개수보다 모자라게 제공할 수 있다.
	배열을 부분적을으로 초기화하면 나머지 원소들은 모두 0으로 설정한다.
	즉, 명시적으로 첫 번째 원소만 0으로 초기화하면, 나머지 원소들은 모두 0으로 초기화된다.
	배열을 초기화할때 대괄호 속을 비워두면 컴파일러가 초기화 값의 개수를 헤아려 배열 원소 개수를 저장한다.
	*/


	//--------------------------------------------------------------------------------------------------------------------------
	//문자열 : 문자의 열
	char a[5] = { 'H', 'e', 'l', 'l', 'o'};
	cout << a << endl; // null값을 설정해줘야 제대로 출력

    char b[6] = { 'H', 'e', 'l', 'l', 'o', '\0'};
	cout << b << endl;

	char c[] = "Hello"; // 중괄호를 사용하지 않고 쌍따옴표를 사용하면 ""는 명시적으로 null문자를 포함하기 때문에 원하는 문장만 출력
	cout << c << endl;

	// 배열이 무엇인가?
	// 배열을 사용하는 규칙 >> index
	// char 문자열



	return 0;
}